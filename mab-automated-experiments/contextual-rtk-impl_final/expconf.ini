# ===================================================================
# FaaS Offloading Simulator
# Configuration file for automated experiments
# -------------------------------------------------------------------
# Use this file to set the parameters for the experiments you wish to
# run. The run.py script will programmatically generate the desired
# configurations and run the experiments, according to what you
# specify in this file.
# ===================================================================

[experiment]
name = contextual-rtk-impl_final
description = FINAL experiments for RTK contextual MABs (refined - "mut50") - with ACTIVE memory metric and EPOCH RESET TEST

# Execution modes - the experiments are run in two phases:
#
# 1. simulations
#    the simulator is run with the specified parameters, and
#    statistics are produced
#
# 2. post-processing
#    some post-processing is done with the statistics produced in
#    the previous stage
# 
# Options available for each phase:
#   - none					(simply don't run the phase)
#   - automated				(run the phase in an automated way, according to the parameters)
#   - (a different value)	(specify a relative path of a custom Python script that will be run for the phase)
mode-preprocessing = pre.py
mode-simulations = automated
mode-postprocessing = post.py

# Maximum number of processes when parallel execution the simulations
# i.e., the number of processes among which the {strategies x axis_pre x axis_post} chuncks
#       will be distributed
max-parallel-execution = 40
close-door-time=500999999999
stats-print-interval=50
mab-update-interval=50

#mab-intermediate-sampling-update-interval = 10
#mab-intermediate-sampling-stats-keys = avgActiveMemoryUtilization_sys_SAMPLES
# 51099999999
#8640000

[output]
# Specify the policy to be adopted with the output (statistics) of the experiments.
# Options available:
#   - no			(do not run any experiment, just use already produced stats files)
#   - skip-existent	(run experiment only if stat files are not available/readable for a specific combination)
#   - always		(run and overwrite in every case)
run-duplicates = always
#skip-existent
#persist=policy, cumavg-reward, time, reward, avgActiveMemoryUtilization_sys, instance_invoked, drops_sys, epochStartTimes, epochStartTimes_ctx
persist=policy, time, reward, activeMemoryUtilization_sys, instance_invoked, epochStartTimes_ctx, context_info

[strategies]
# UCB strategies to be run in the experiments.
# (multiple values, comma-separated, are admissible)
# Options available:
#	- UCB2
#	- UCBTuned
#	- KL-UCB
#   - KL-UCBsp
strategies = RTK-UCBTuned
#, RTK-UCB2
#, RTK-UCB2-ER

[parameters]
# Parameters for the executions
# For iterable parameters please specify all of the following (up to two decimals):
#   - param-name-start
#   - param-name-step
#   - param-name-end


bayesopt=false

mab-ucb-exploration-factor=0.1

#mab-ucb2-alpha=0.5


objfn-stabilizations-iterations=1
rand-points=4
iterations=20
improvement-threshold = 1e-4
sliding-window-size = 4


ef-lower=0
ef-upper=1

ucb2-alpha-lower=0.001
ucb2-alpha-upper=0.999

#specfiles=sinus_f1_x5
#specfiles=sfasate_sinusoid, sfasate_bell, linear-debug, bell-debug, 2square-debug,2square_inv-debug,2sawtooth-debug,gauss-debug, sinus-debug, 4sinus-debug,  const50, const200, const500, const1000, const1500, const2000, actmem-saturation, sinus-saturation-test1500
#specfiles=sfasate_sinusoid, sfasate_bell, linear-debug, bell-debug, 2sawtooth-debug, sinus-debug, 4sinus-debug,  const50, const200
# FIXME const500 già fatta, è in cartella diversa ma c'è
# fixme ho tolto const1000 e actmemsat
#specfiles=linear-debug-fullspectrum, bell-debug-fullspectrum, sinus-debug-fullspectrum, 4sinus-debug-fullspectrum, const50,sfasate_sinusoid-fullspectrum, sfasate_bell-fullspectrum
specfiles=linear-debug
#specfiles=sfasate_sinusoid-fullspectrum, sfasate_bell-fullspectrum
#,bell-saturation-test2500_f4
#,bell-saturation-test3000_f4
#,bell-saturation-test3500_f4



#prova1
#sawtooth-wave
#linear
#square-wave-inverted
#sinus, f1gauss, f1linear, f1linear_scaled, f1gauss_scaled, square

# Seed(s) (default: 123)
# (multiple values, comma-separated, are admissible)
seeds = 123456789
[reward_fn]
# Specify the "axis" (i.e., the reward fn. parameters weights) that will be alternately put to 1.
# "axis_post" may differ from "axis_pre" if you want to try to change the reward function after a while.
# Otherwise, if you want the axis to be fixed, you can leave the "axis_post" field empty.
# (multiple values, comma-separated, are admissible)
# Options available:
#	- load_imb 		(i.e., alpha)
#	- rt			(i.e., beta)
#	- cost			(i.e., gamma)
#	- utility		(i.e., delta)
#	- violations	(i.e., zeta)
axis_pre = rt
#, cold_starts
axis_post= 

